<ons-page id="pokemon">

    <script>
        console.warn("In the module in pokemon.html.twig");
        function savePokemon (pokenumber, button) {
            addPokemonToGrid(pokenumber);
            button.parentNode.parentNode.hideExpansion();
        }

        function appendPokemon (list, pokenumber, name)
        {
            let element = `
        <ons-list-item expandable>
          ${pokenumber} ${name}
          <div class="expandable-content">
            <ons-button onclick="savePokemon(${pokenumber}, this)">Save</ons-button>
          </div>
        </ons-list-item>
      `;
            console.log('adding item to list', element);
            list.appendChild(ons.createElement(element));
        }

        document.addEventListener('init', ({target}) => {
            console.log('init received. ', target);
            const list = document.querySelector('#pokemon-list');

            if (target.matches('#pokemon'))
            {
                // local storage keys
                const URL = 'pokemon__url';
                const PREFIX = 'pokemon__';

                let nextPokenumber = 1;
                let storedPokemon;

                while ((storedPokemon = localStorage.getItem(PREFIX + nextPokenumber)) !== null) {
                    console.log(`got ${storedPokemon} from local with key ${PREFIX + nextPokenumber}`);
                    appendPokemon(list, nextPokenumber, storedPokemon);
                    nextPokenumber++;
                }

                if (!localStorage.getItem(URL)) {
                    localStorage.setItem(URL, 'https://pokeapi.co/api/v2/pokemon');
                }

                const get = async () => {
                    // do the API call and get JSON response
                    const response = await fetch(localStorage.getItem(URL));
                    const json = await response.json();

                    const newPokemon = json.results.map(e => e.name);

                    console.error(list);

                    newPokemon.forEach((name, i) => {
                        appendPokemon(list, nextPokenumber, name);
                        if (nextPokenumber > 22) {
                            return;
                        }

                        const key = PREFIX + nextPokenumber;
                        console.log(`i${i} Storing ${name} as ${key}`);
                        localStorage.setItem(key, name)
                        nextPokenumber++;
                    });

                    localStorage.setItem(URL, json.next);

                    // hide the spinner when all the pages have been loaded
                    if (!localStorage.getItem(URL)) {
                        document.querySelector('#after-list').style.display = 'none';
                    }
                };

                // get the first set of results as soon as the page is initialised
                get();

                // at the bottom of the list get the next set of results and append them
                target.onInfiniteScroll = (done) => {
                    if (localStorage.getItem(URL)) {
                        setTimeout(() => {
                            get();
                            done();
                        }, 200);
                    }
                };
            }
        });
    </script>

    <div {{ stimulus_controller('hello') }}>
        Hola!
    </div>


    <span {{ stimulus_target('app', 'message') }}>
        message
    </span>

    <h3>Pokemon-list</h3>
    <ons-list id="pokemon-list">
        <ons-list-item>TEST</ons-list-item>
    </ons-list>

    <div id="after-list" style="margin: 20px; text-align: center;">
        <ons-icon icon="fa-spinner" size="26px" spin></ons-icon>
    </div>

</ons-page>
